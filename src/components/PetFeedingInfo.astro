---
import type {
  DietFoodsResponse,
  FeedingsResponse,
  FoodsResponse,
  PetsResponse,
  ScheduleEntriesResponse,
  ScheduleEntryFeedingsResponse,
  SchedulesResponse,
} from "../types/pocketbase";
import CustomFeedingRow from "./CustomFeedingRow.astro";
import ScheduleTableRow from "./ScheduleTableRow.astro";

type Props = {
  pet: PetsResponse;
};
const { pet } = Astro.props;

const pb = Astro.locals.pb;

const dietFoods = await pb
  .collection("diet_foods")
  .getFullList<DietFoodsResponse<{ food: FoodsResponse }>>({
    filter: `diet.pet.id = "${pet.id}" && diet.is_active = true`,
    expand: "food",
  });

const scheduleEntries = await pb.collection("schedule_entries").getFullList<
  ScheduleEntriesResponse<{
    food: FoodsResponse;
    schedule: SchedulesResponse;
  }>
>({
  expand: "food,schedule",
  filter: `schedule.pet.owner.id ?= "${pb.authStore.model?.id}"`,
  sort: "time",
});

const feedings = await pb
  .collection("feedings")
  .getFullList<FeedingsResponse<{ food: FoodsResponse }>>({
    filter: `pet.id = "${pet.id}" && created >= @todayStart && created <= @todayEnd`,
    expand: "food",
  });

const scheduleEntryFeedings = await pb
  .collection("schedule_entry_feedings")
  .getFullList<
    ScheduleEntryFeedingsResponse<{
      schedule_entry: ScheduleEntriesResponse<{
        food: FoodsResponse;
      }>;
    }>
  >({
    filter: `pet.id = "${pet.id}" && created >= @todayStart && created <= @todayEnd && is_done = true`,
    expand: "schedule_entry,schedule_entry.food",
  });
---

<>
  <section>
    <div>
      <h2>{pet.name}</h2>
      <span>
        <iconify-icon icon="tabler:calendar"></iconify-icon>
        {new Date().getFullYear() - new Date(pet.birthdate).getFullYear()}{" "}
        ans
      </span>
      <span>
        <iconify-icon icon="tabler:weight"></iconify-icon>
        {pet.current_weight} kg
      </span>
    </div>
    <div
      hx-get="/api/feeding/progress"
      hx-trigger="load, feeding-update from:body"
      hw-swap="outerHTML"
      hx-target="#feedingProgress"
      hx-include="this"
    >
      <input type="hidden" name="petId" value={pet.id} />
    </div>
    <div id="feedingProgress"></div>
  </section>

  <section>
    <details open>
      <summary>Planning</summary>
      <figure>
        <table role="grid">
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Heure</th>
              <th scope="col">Nourriture</th>
              <th scope="col">Quantité</th>
            </tr>
          </thead>
          <tbody>
            {
              scheduleEntries
                .filter((entry) => entry.expand?.schedule.pet === pet.id)
                .map((entry) => (
                  <ScheduleTableRow
                    scheduleEntry={entry}
                    isDone={scheduleEntryFeedings.some(
                      (feeding) =>
                        feeding.schedule_entry === entry.id && feeding.is_done
                    )}
                  />
                ))
            }
          </tbody>
        </table>
      </figure>
    </details>

    <details>
      <summary>Hors planning ({feedings.length})</summary>
      <div class="error"></div>
      <form
        class='grid"'
        hx-post="/api/feeding/custom"
        hx-target="#customFeedings"
        hx-swap="afterbegin"
        hx-target-errors="closest .error"
      >
        <input type="hidden" name="petId" value={pet.id} />
        <label for="foodId">Nourriture</label>
        <select name="foodId">
          {
            dietFoods.map((df) => (
              <option value={df.food}>{df.expand?.food.name}</option>
            ))
          }
        </select>
        <label for="quantity"
          >Quantité <input
            type="number"
            name="quantity"
            min="0"
            step="any"
          /></label
        >
        <label for="unit">Unité</label>
        <select name="unit">
          <option value="g">g</option>
          <option value="boîte">boîte</option>
        </select>
        <button type="submit">Ajouter</button>
      </form>

      <ol id="customFeedings">
        {
          feedings.map((feeding) => (
            <CustomFeedingRow
              created={feeding.created}
              foodName={feeding.expand!.food.name}
              quantity={feeding.quantity}
            />
          ))
        }
      </ol>
    </details>
  </section>
</>
